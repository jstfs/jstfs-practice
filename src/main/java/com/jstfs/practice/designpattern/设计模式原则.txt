
总原则: 开闭原则 (Open-Closed Principle)

1, Single Responsibility Principle

	单一职责原则.
	意思是不要存在多于一个导致该类变化的原因,也就是说每个类应该实现单一的职责.如若不然,就应该把类拆分.

2, Liskov Substitution Principle
	
	里氏代换原则.
	由2008年图灵奖获得者,美国计算机科学家 Barbara Liskov 提出.
	意思是任何基类对象出现的地方,都可以替换为它的子类对象.

3, Dependence Inversion Principle
	
	依赖倒转原则.
	意思是要依赖于抽象,而不依赖于具体.比如对象的方法调用时,更多的是使用抽象类或者接口类型来调用而不是具体的类型.
	
4, Interface Segregation Principle
	
	接口隔离原则.
	意思是每个接口中不应该存在子类用不到却必须实现的方法.如果存在,就需要将接口拆分.
	
5, Demeter Principle

	迪米特法则,又叫做:最少知道原则 (Least Knowledge Principle)
	是 Ian Holland 在一个叫做迪米特的项目的设计中提出的.
	意思是一个类对自己依赖的类应该知道的越少越好.换句话就是只和最直接的朋友通讯,不要跟陌生人说话.

6, Composite Reuse Principle
	组合复用原则.
	意思是尽量优先使用组合或者聚合创建新的类,而不是优先使用继承.
	